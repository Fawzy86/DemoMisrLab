@model DemoMisrInternationalLab.Models.DeviceViewModel
@using DemoMisrInternationalLab.Resources
@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "Device_Plan_Analyzes_Form" }))
{
    @Html.AntiForgeryToken()
    if (Model != null && Model.Analyzes.Any())
    {
        @Html.HiddenFor(m=>Model.Device.UnitId)
        @Html.HiddenFor(m=>Model.Device.DeviceId)
        <div class="table-scroll">
            <table class="table table-bordered">
                <thead>
                    <tr style="BACKGROUND-COLOR: #1C598F;COLOR: #FFF;">
                        <td>Run #</td>
                        <th>Analysis Name</th>
                        <th>Gender</th>
                        <th>Age</th>
                        <th>Request Date</th>
                        <th>Rake #</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Analyzes.Count;i++ )
                    {
                        var Age = Model.Analyzes[i].BirthDate != null ? (DateTime.Now.Year - Convert.ToDateTime(Model.Analyzes[i].BirthDate).Year).ToString() : String.Empty;
                        @Html.HiddenFor(m=>Model.Analyzes[i].DeviceAnalysisId)
                        @Html.HiddenFor(m=>Model.Analyzes[i].RequestedAnalysisID)
                        <tr>
                            <td>@Html.DisplayFor(m => Model.Analyzes[i].RunNumber)</td>
                            <td>@Html.DisplayFor(m => Model.Analyzes[i].AnalysisName)</td>
                            <td>@Html.DisplayFor(m => Model.Analyzes[i].Gender)</td>
                            <td>@Age</td>
                            <td>@Html.DisplayFor(m => Model.Analyzes[i].RequestDate)</td>
                            <td>@(i + 1)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-md-12 text-right">
            <button type="button" id="ConfirmRunTest_Button"
                    name="ConfirmRunTest_Button" class="btn btn-danger"
                    style="border-radius:0;" onclick="ConfirmRunTest();">
                Confirm
            </button>
            <button type="button" id="CancelRunTest_Button"
                    name="CancelRunTest_Button" class="btn btn-danger"
                    style="border-radius:0;" onclick="CancelRunTest();">
                Cancel
            </button>
        </div>
    }
}

<script type="text/javascript">
    ////////////////////////////////////////////////////////////
    function ConfirmRunTest() {
        //  var form = $(this).closest("form");
        var form = $("#Device_Plan_Analyzes_Form");
        try {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: "/Lab/ConfirmRunTest",//form.attr('action'),
                data: form.serialize(),
                success: function (data) {
                    if (data != null && data.length > 0) {
                        window.location.href = "#";
                        $("#Work_Unit_DevicesWithAnalyzes_Container").html(data);
                    }
                },
                error: function (xhr, desc, err) {
                    alert("Error: " + err + " " + desc + " " + xhr.responseText);
                }
            });
        }
        catch (err) {
            alert(err.message + err.description);
        }
        return false;
    }
    //////////////////////////////////////////////////////////
    function CancelRunTest() {
        window.location.href = "#";
    }
</script>


