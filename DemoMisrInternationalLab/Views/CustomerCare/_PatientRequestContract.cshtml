@model DemoMisrInternationalLab.Models.PatientRequestViewModel
@using DemoMisrInternationalLab.Resources
@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "Contract_PatientRequest_Form", enctype = "multipart/form-data" }))
{
    @*@Html.ValidationSummary("Invalid data")*@
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-6">
            @Html.HiddenFor(m => Model.AttachmentSession, new { @id = "ContractAttachmentSession" })
            <div class="row">

                <div class="col-md-3"><h4 class="panel-titleb" style="margin-top:5px;">Patient Info</h4> </div>
                <div class="col-md-4" style="text-align:right;">@Html.ValidationMessageFor(m => Model.Organizations.SelectedOrganizationID)</div>

                <div class="col-md-5">
                    @Html.DropDownListFor(p => Model.Organizations.SelectedOrganizationID,
                                            Model.Organizations.OrganizationsIEnum, "-- Company Name --",
                                            new
                                            {
                                                @id = "Contract_Organizations_SelectedOrganizationID",
                                                @class = "form-control form-widthhh-company pull-right"
                                            })
                </div>

            </div>
            <div class="input-group row">

                <div class="col-md-4 col-sm-4 col-xs-12" style="padding-right:0px;">
                    <span class="input-group-addon namefirst"><i class="fa fa-user"></i></span>
                    @Html.TextBoxFor(m => Model.PatientInfo.FirstName, new { @class = "form-control form-widthhh", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.FirstName) })
                    @*@Html.ValidationMessageFor(m => Model.PatientInfo.FirstName)*@
                </div>

                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.TextBoxFor(m => Model.PatientInfo.MiddleName, new { @class = "form-control formtop-mobile", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.MiddleName) })
                </div>

                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.TextBoxFor(m => Model.PatientInfo.LastName, new { @class = "form-control formtop-mobile", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.LastName) })
                </div>

            </div>
            <div class="input-group">
                <div id="Contract_Gender_text_radio">
                    @Html.RadioButtonFor(m => Model.PatientInfo.Gender, Gender.Male,
                                        new Dictionary<string, object>
                                        {
                                            {"id","Contract_PatientInfo_Gender_Male"},
                                            {"name","Contract_PatientInfo_Gender_Male"},
                                            { "class", "text-nicelabel" },
                                            { "data-nicelabel", @"{""position_class"": ""text_radio"", ""checked_text"": ""Male"", ""unchecked_text"": ""Male""}"}
                                        })
                    @Html.RadioButtonFor(m => Model.PatientInfo.Gender, Gender.Female,
                                        new Dictionary<string, object>
                                        {
                                            {"id","Contract_PatientInfo_Gender_Female"},
                                            {"name","Contract_PatientInfo_Gender_Female"},
                                            { "class", "text-nicelabel" },
                                            { "data-nicelabel", @"{""position_class"": ""text_radio"", ""checked_text"": ""Female"", ""unchecked_text"": ""Female""}"}
                                        })
                    @Html.RadioButtonFor(m => Model.PatientInfo.Gender, Gender.Baby,
                                        new Dictionary<string, object>
                                        {
                                            {"id","Contract_PatientInfo_Gender_Baby"},
                                            {"name","Contract_PatientInfo_Gender_Baby"},
                                            { "class", "text-nicelabel" },
                                            { "data-nicelabel", @"{""position_class"": ""text_radio"", ""checked_text"": ""Baby"", ""unchecked_text"": ""Baby""}"}
                                        })
                </div>

            </div>



            <div class="input-group row">

                <div class="col-md-4 col-sm-3 col-xs-12" style="padding-right:0px;">
                    <span class="input-group-addon namefirst"><i class="fa fa-sort-numeric-desc"></i></span>
                    @Html.TextBoxFor(m => Model.PatientInfo.Age, new { @id = "Contract_PatientInfo_Age", @class = "form-control form-widthhh", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.Age) })
                </div>

                <div class="col-md-4 col-sm-3 col-xs-12">
                    @Html.TextBoxFor(m => Model.PatientInfo.BirthMonth, new { @id = "Contract_PatientInfo_BirthMonth", @class = "form-control formtop-mobile", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.BirthMonth) })
                </div>

                <div class="col-md-4 col-sm-3 col-xs-12">
                    @Html.TextBoxFor(m => Model.PatientInfo.BirthYear, new { @id = "Contract_PatientInfo_BirthYear", @class = "form-control formtop-mobile", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.BirthYear) })
                </div>

            </div>

            <div class="input-group row">

                <div class="col-md-4 col-sm-3 col-xs-12" style="padding-right:0px;">
                    <span class="input-group-addon namefirst"><i class="fa fa-mobile"></i></span>
                    @Html.TextBoxFor(m => Model.PatientInfo.Mobile, new { @class = "form-control form-widthhh", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.Mobile) })
                </div>

                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.TextBoxFor(m => Model.PatientInfo.Phone, new { @class = "form-control formtop-mobile", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.Phone) })
                </div>

                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.TextBoxFor(m => Model.PatientInfo.Email, new { @class = "form-control formtop-mobile", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.Email) })
                </div>

            </div>

            <div class="input-group row">

                <div class="col-md-4 col-sm-4 col-xs-12">
                    <span class="input-group-addon namefirst"><i class="fa fa-globe"></i></span>
                    @Html.DropDownListFor(p => Model.PatientInfo.Provinces.SelectedProvinceID,
                                           Model.PatientInfo.Provinces.ProvincesIEnum, "-- Governate --",
                                          new { @id = "Contract_PatientInfo_Provinces_SelectedProvinceID", @class = "form-control form-widthhh" })
                </div>

                <div id="Contract_PatientInfo_Cities_Content" class="col-md-4 col-sm-4 col-xs-12">
                    @{Html.RenderAction("GetCityView", new { stateProvinceID = 0 });}
                </div>

                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.TextBoxFor(m => Model.PatientInfo.Address, new { @class = "form-control formtop-mobile", @placeholder = @Html.DisplayNameFor(m => Model.PatientInfo.Address) })
                </div>

            </div>

            <div class="input-group row">

                <div class="col-md-8" style="padding-right:0px;">
                    <span class="input-group-addon namefirst"><i class="fa fa-stethoscope"></i></span>
                    <div id="Contract_DoctorRef_Content">
                        @{Html.RenderAction("GetDoctorsRefPartial");}
                    </div>
                </div>
                <div class="col-md-4 add-icon" style="padding-right:0px;">
                    <a href="" id="Contract_DoctorRef_Link"><i class="fa fa-plus-circle fa-2x"></i></a>
                </div>
            </div>
            <div id="Contract_DoctorRef_Popup" class=" overlay ">
                <div class=" popup">
                    <a class="close" href="#">&times;</a>
                    <div class="contentt" id="Contract_DoctorRef_Popup_Content"></div>
                </div>
            </div>
            <div class="input-group">

                <h4 class="panel-titleb">Pickup Analysis</h4>
                @Html.DropDownListFor(p => Model.Analyzes.SelectedAnalyzesIDs,
                                          Model.Analyzes.AnalyzesIEnum,
                                      new
                                      {
                                          @id = "Contract_Analyzes_SelectedAnalyzesIDs",
                                          @class = "chosen-select",
                                          multiple = "multiple",
                                          data_placeholder = "Pickup Analysis ...",
                                      })

            </div>
            <div class="input-group">
                <div id="Contract_Priority_text_radio">
                    @Html.RadioButtonFor(m => Model.RequestPriority, Priority.Low,
                                        new Dictionary<string, object>
                                        {
                                            {"id","Contract_Priority_Low"},
                                            {"name","Contract_Priority_Low"},
                                            { "class", "text-nicelabel" },
                                            { "data-nicelabel", @"{""position_class"": ""text_radio"", ""checked_text"": ""Low"", ""unchecked_text"": ""Low""}"}
                                        })
                    @Html.RadioButtonFor(m => Model.RequestPriority, Priority.Medium,
                                        new Dictionary<string, object>
                                        {
                                            {"id","Contract_Priority_Medium"},
                                            {"name","Contract_Priority_Medium"},
                                            { "class", "text-nicelabel" },
                                            { "data-nicelabel", @"{""position_class"": ""text_radio"", ""checked_text"": ""Medium"", ""unchecked_text"": ""Medium""}"}
                                        })
                    @Html.RadioButtonFor(m => Model.RequestPriority, Priority.High,
                                        new Dictionary<string, object>
                                        {
                                            {"id","Contract_Priority_High"},
                                            {"name","Contract_Priority_High"},
                                            { "class", "text-nicelabel" },
                                            { "data-nicelabel", @"{""position_class"": ""text_radio"", ""checked_text"": ""High"", ""unchecked_text"": ""High""}"}
                                        })
                </div>

            </div>

            <div class="clearfix"></div>


        </div>


        <div class="col-md-6">

            <h4 class="panel-titleb" style="margin-top:5px;">Invoice Summary</h4>
            <div class="input-group">

                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td width="66.9%" style="background-color:#dddddd; color:#999999;">Total Invoice</td>
                            @Html.Hidden("Contract_Total_Before_Charges")
                            <td width="33.1%" style="background-color:#de8650; color:#fff;" id="Contract_Total_BeforeCharges_Display">0</td>
                        </tr>
                    </tbody>
                </table>

                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td style="background-color:#61aee2; color:#fff;">+ Discount (%)</td>
                            <td style="background-color:#dddddd; color:#999999;">Extra Charge</td>
                        </tr>
                        <tr>
                            <td style="background-color:#fff; color:#ccc;">
                                @Html.TextBoxFor(m => Model.ExtraDiscount, new
                           {
                               @class = "form-control form-widthhh-summary",
                               @id = "Contract_ExtraDiscount",
                               @placeholder = @Html.DisplayNameFor(m => Model.ExtraDiscount),
                               @onchange = "ContractCalculateTotalAnalyzesCost();"
                           })
                            </td>
                            <td style="background-color:#fff; color:#ccc;">
                                @Html.TextBoxFor(m => Model.ExtraCost, new
                           {
                               @class = "form-control form-widthhh-summary",
                               @id = "Contract_ExtraCost",
                               @placeholder = @Html.DisplayNameFor(m => Model.ExtraCost),
                               @onchange = "ContractCalculateTotalAnalyzesCost();"
                           })
                            </td>
                        </tr>
                    </tbody>
                </table>



                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td width="66.9%" style="background-color:#dddddd; color:#999999;">Total After Charges </td>
                            @Html.HiddenFor(m => Model.TotalAfterCharges, new { @id = "Contract_Total_AfterCharges" })
                            <td width="33.1%" style="background-color:#de8650; color:#fff;" id="Contract_Total_AfterCharges_Display">0</td>
                        </tr>
                    </tbody>
                </table>

                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td width="66.9%" style="background-color:#dddddd; color:#999999;">Paid </td>
                            <td width="33.1%" style="background-color:#de8650; color:#fff;">
                                @Html.TextBoxFor(m => Model.Paid, new
                           {
                               @id = "Contract_Paid",
                               @class = "form-control form-widthhh-summaryb",
                               @placeholder = @Html.DisplayNameFor(m => Model.Paid),
                               @onchange = "ContractCalculateTotalAnalyzesCost();"
                           })
                            </td>
                        </tr>
                    </tbody>
                </table>

                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td width="66.9%" style="background-color:#dddddd; color:#999999;">Due Sum</td>
                            @Html.HiddenFor(m => Model.Remain, new { @id = "Contract_Remain" })
                            <td width="33.1%" style="background-color:#de8650; color:#fff;" id="Contract_Remain_Display">0</td>
                        </tr>
                    </tbody>
                </table>

            </div>


            <div class="input-group">

                <h4 class="panel-titleb panel-titleadd">Official Document</h4>


                @*<div class="container" id="UploadAttachmentDiv___">
                        <div class="col-md-12"></div>

                        <input id="file-1" type="file" multiple class="file" data-overwrite-initial="false" data-min-file-count="2">

                    </div>*@
                <!--<div class="col-md-6 col-sm-6 col-xs-6 upload-img"><a href="#"><i class="fa fa-file"></i></a></div>-->
                @*<div class="col-md-6 col-sm-6 col-xs-6 upload-img"><input type="file" multiple /></div>*@

                <div class="col-md-6 col-sm-6 col-xs-6 id-img">
                    <a href="#Contract_Upload_Attachment_Popup">
                        <button type="button" class="btn btn-success" style="border-radius:0;">Upload</button>
                    </a>
                    <div id="Contract_Upload_Attachment_Popup" class="overlay">
                        <div class="popup">
                            <a class="close" href="#">&times;</a>

                            <div class="contentt">

                                <input id="Contract_Upload_AttachmentFile" type="file" multiple class="file" data-overwrite-initial="false" data-min-file-count="2">
                                <div class="text-right">
                                    <button type="button" class="btn btn-success" onclick="ClosePopup();" style="border-radius:0;">Close</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-6 id-img">
                    <a href="#"><i class="fa fa-picture-o"></i></a>
                </div>

            </div>



        </div>



    </div>

    <div class="row">

        <div class="col-md-12">

            <div class="panel-footer">
                <div class="row">
                    <div class="col-md-12 text-right">
                        <button type="submit" id="Contract_Submit_PatientRequest" name="Contract_Submit_PatientRequest" class="btn btn-success" style="border-radius:0;">Submit</button>
                        <button type="submit" id="CanccelContractPatientRequest" name="CanccelContractPatientRequest" class="btn btn-danger" style="border-radius:0;">Cancel</button>
                    </div>
                </div>
            </div>

        </div>

    </div>

    <div id="Contract_Request_Result_Popup" class="overlay">
        <div class="popup">
            @*<a class="close" href="#">&times;</a>*@
            <div class="contentt">
                <div id="Contract_Request_Result_Popup_Content" style="z-index:9999 !important;"></div>
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")
<script src="~/js/forms-custom.js"></script>
<script type="text/javascript">
    // $.validator.unobtrusive.parse($("#entirepatientinfoformdiv"));
    $(document).ready(function () {
        $('#Contract_Gender_text_radio > input').nicelabel();
        $('#Contract_Priority_text_radio > input').nicelabel();
    });
    ////////////////////////////////////////////////
    $("#Contract_PatientInfo_Age").blur(function () {
        if ($("#Contract_PatientInfo_Age").val().length > 0) {
            var AgeValue = $("#Contract_PatientInfo_Age").val();
            var DateNow = new Date();
            var RoundedAge = Math.round(AgeValue);
            $("#Contract_PatientInfo_BirthMonth").val("6");
            $("#Contract_PatientInfo_BirthYear").val(DateNow.getFullYear() - RoundedAge);
        }
        else {
            $("#Contract_PatientInfo_BirthMonth").val("");
            $("#Contract_PatientInfo_BirthYear").val("");
        }
    });
    ///////////////////////////////////////////////////
    $("#Contract_PatientInfo_BirthYear").blur(function () {
        if ($("#Contract_PatientInfo_BirthYear").val().length > 0) {
            var YearValue = $("#Contract_PatientInfo_BirthYear").val();
            var DateNow = new Date();
            var RoundedYear = Math.round(YearValue);
            $("#Contract_PatientInfo_BirthMonth").val("1");
            $("#Contract_PatientInfo_Age").val(DateNow.getFullYear() - RoundedYear);
        }
        else {
            $("#Contract_PatientInfo_BirthMonth").val("");
            $("#Contract_PatientInfo_Age").val("");
        }
    });
    ///////////////////////////////////////////////////////
    $('#Contract_PatientInfo_Provinces_SelectedProvinceID').change(function () {
        var selectedStateProvinceID = this.value;
        try {
            $("#Contract_PatientInfo_Cities_Content").load('@Url.Action("GetCityView","CustomerCare")?stateProvinceID=' + selectedStateProvinceID + "&Container=Contract");
        }
        catch (err) {
            alert(err.message);
        }
    });
    ///////////////////////////////////////////////////
    $('#Contract_DoctorRef_Link').on('click', function (event) {
        event.preventDefault();
        $.ajax({
            cache: false,
            async: true,
            type: "Get",
            url: "/CustomerCare/LoadDoctorRefAddPartial?Category=" + '@CategoryType.Contract',//form.attr('action'),
            success: function (data) {
                $("#Contract_DoctorRef_Popup_Content").html(data);
                window.location.href = "#Contract_DoctorRef_Popup";
            },
            error: function (xhr, desc, err) {
                alert("Error: " + err + " " + desc + " " + xhr.responseText);
            }
        });
    });
    ///////////////////////////////////////////////////////
    $("#Contract_Analyzes_SelectedAnalyzesIDs").on("change", function () {
        var SelectedAnalyzesIDs = $("#Contract_Analyzes_SelectedAnalyzesIDs").val();
        try {
            if (SelectedAnalyzesIDs != null && SelectedAnalyzesIDs.length > 0) {
                $.ajax({
                    cache: false,
                    async: true,
                    type: "GET",
                    url: "/CustomerCare/GetAnalyzesCost?analyzesIDs=" + SelectedAnalyzesIDs,//form.attr('action'),
                    success: function (data) {
                        $("#Contract_Total_Before_Charges").val(data);
                        ContractCalculateTotalAnalyzesCost();
                    },
                    error: function (xhr, desc, err) {
                        alert("Error: " + err + " " + desc + " " + xhr.responseText);
                    }
                });
            }
            else {
                $("#Contract_Total_Before_Charges").val(0);
                ContractCalculateTotalAnalyzesCost();
            }
        }
        catch (err) {
            alert(err.message + err.description);
        }
    });
    /////////////////////////////////////////////////////////////////
    $("#Contract_Upload_AttachmentFile").fileinput({
        uploadUrl: '@Url.Action("UploadAttachment", "CustomerCare", new { attachmentSession = @Model.AttachmentSession })', // you must set a valid URL here else you will get an error
        type: "POST",
        allowedFileExtensions: ['jpg', 'png', 'gif'],
        overwriteInitial: false,
        maxFileSize: 1000,
        maxFilesNum: 10,
        //allowedFileTypes: ['image', 'video', 'flash'],
        slugCallback: function (filename) {
            return filename.replace('(', '_').replace(']', '_');
        }
    });
    ///////////////////////////////////////////////////////
    $("#Contract_Submit_PatientRequest").on('click', function (event) {
        event.preventDefault();
        var form = $(this).closest("form");
        try {
            if ($("#Contract_Upload_AttachmentFile").val() != null && $("#Contract_Upload_AttachmentFile").val().length > 0) {
                window.location.href = "#Contract_Upload_Attachment_Popup";
            }
            else {
             //   if (form.valid()) {
                    $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: "/CustomerCare/SubmitPatientRequest",//form.attr('action'),
                        data: form.serialize() + "&Category=" + '@CategoryType.Contract',
                        success: function (data) {
                            ContractOpenRequestResultPopup(data);
                        },
                        error: function (xhr, desc, err) {
                            alert("Error: " + err + " " + desc + " " + xhr.responseText);
                        }
                    });
              //  }
            }
        }
        catch (err) {
            alert(err.message + err.description);
        }
    });
    //////////////////////////////////////////////////////////
    function ContractOpenRequestResultPopup(data) {
        // $("#RequestResultDiv").html(data);
        $("#Contract_Request_Result_Popup_Content").html(data);
        //$("#RequestResultDiv").dialog("open");
        window.location.href = "#Contract_Request_Result_Popup";
    }
    /////////////////////////////////////////////////////////////
    function ContractCalculateTotalAnalyzesCost() {
        var TotalAfterCharges = 0;
        var Remain = 0;
        try {
            var TotalBeforeCharges = $("#Contract_Total_Before_Charges").val();
            $("#Contract_Total_BeforeCharges_Display").html(TotalBeforeCharges);
            if (TotalBeforeCharges.length > 0) {
                TotalAfterCharges = parseFloat(TotalBeforeCharges);

                var ExtraCost = parseFloat($("#Contract_ExtraCost").val());
                if (ExtraCost > 0) {
                    TotalAfterCharges += ExtraCost;
                }

                var ExtraDiscount = parseFloat($("#Contract_ExtraDiscount").val());
                if (ExtraDiscount > 0) {
                    if (ExtraDiscount < 1) {
                        TotalAfterCharges *= (1 - ExtraDiscount);
                    }
                    else {
                        TotalAfterCharges -= parseFloat(ExtraDiscount);
                    }
                }
                Remain = TotalAfterCharges;

                var Paid = $("#Contract_Paid").val();
                if (Paid.length > 0) {
                    Remain -= parseFloat(Paid);
                }
            }
            //// Total after charge
            $("#Contract_Total_AfterCharges").val(TotalAfterCharges.toFixed(2));
            $("#Contract_Total_AfterCharges_Display").html(TotalAfterCharges.toFixed(2));
            //// Remain
            $("#Contract_Remain").val(Remain.toFixed(2));
            $("#Contract_Remain_Display").html(Remain.toFixed(2));
        }
        catch (err) {
            alert(err.message);
        }
    }
    ///////////////////////////////////////////////////////
    function ContractReloadPatientRequest() {
        try {
            $('#contract').load('@Url.Action("loadPatientRequestContract", "CustomerCare")');
        }
        catch (err) {
            alert(err.message);
        }
    }


</script>
